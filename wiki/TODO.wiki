#summary Current TODO for all active branches
#labels Featured

What needs to be done (or undone). *This is* the latest, *most accurate TODO list*. 

Please note, if there were previous assignments you were supposed to fulfil, it might now not be so. Please checkout trunk to see what is and what is not yet. If you find yourself having nothing to do, grab [http://code.google.com/p/lbos-fri/source/browse/trunk/README.txt?r=90#116 reference material], and write a driver for some pheripheral or something (eth would be nice =p). You may also help out with other groups, but please resort to commiting to /branches/yourGroupName exclusively! When you have a segment of tested working code open a review request in the issue tracker to merge it into trunk.

<wiki:toc max_depth="1" />

= Group 8 / 2.1 =
  * Document task stack usage (USP), should be mapped into task virtual space - ?
  * Document task heap usage via the `brk` system call - ?
  * [TerminalIOPlan Implement task terminal I/O] - *perice*
  * Write documentation on how MMC and MCI work - *kostko*
  * System task capability registration mechanism - ?
  * [DynamicTasksPlan Implement dynamic task creation, PIDs and the fork function] - *zomb*
  * Implement ELF binary loader - ?
  * [KernelHeapAndKmallocPlan Implement VM-mapped kernel heap] - *kostko*
  * [EMAC Research EMAC interface (based on ATMEL's)] - *zomb*

  * ~~svc_newtask, svc_delay, svc_send, svc_recv, svc_reply, svc_led - *kostko*~~
  * ~~Improve the debugger to output registers (reg0-reg12 and SPSR/CPSR) - *kernc*~~
  * ~~Improve printk routine so it uses DMA - *kernc*~~
  * ~~Implement _vsprintf_-like function - *kernc*~~
  * ~~Implement _panic_ function (disable irq + printk + infinite loop) - *kostko*~~
  * ~~Add T_PRIO to TCB struct (4 bytes) - *kostko*~~
  * ~~MMC driver and API for data transfer - svc_mmc_read, svc_mmc_write - *kostko*~~
  * ~~Implement basic string functions - *kostko*~~
  * ~~Implement contigous page allocation (currently in 32K blocks which is good enough for now - only needed for MMU translation tables) - *kostko*~~
  * ~~Make task system stack and user stack dynamically allocatable - *kostko*~~
  * ~~[VirtualMemoryPlan Implement virtual memory] - *zomb*~~

= Group 6 / 2.2 =
  * [http://en.wikipedia.org/wiki/Weighted_round_robin Weighted Round-Robin] and optional priority scheduler - see [http://code.google.com/p/lbos-fri/source/browse/trunk/src/sched.s sched.s] - ?
  * ...

= Group ? / 2.3 =
  * ...

= Group 3 / 2.4 =
  Members: Gašper Rupnik, Anže Pečar, Tomaž Sečnik, Erik Hribar

  * to comply with CODING_STANDARD
  * ENABLE_IRQ/DISABLE_IRQ (macros) to irq_disable/irq_restore (functions)
  * Implement timer and set/clear timer flags
  * Implement some test tasks
  * Test our code
  
  * ~~Implement protection for overflow of DELAY LIST~~
  * ~~Implement 'Deleting requirements for delay' from plan~~
  * ~~Implement 'Adding requirements for delay' from plan~~
  * ~~Implement 'Requirements' from plan~~
  * ~~[planOfDelay Plan for SVC_DELAY]~~

= Group ? / 2.5 =
  * svc_signal and svc_wait for dynamic lock objects aquisitions - ?
  * ...

= Group ? / 2.6 =
  * svc_getchar, svc_putchar for communication with the serial port - ?
  * monitor process - ?
  * ...

= Group ? / 2.7 =
  * directory structure - ?
  * svc_mkdir, svc_rmdir, svc_chdir, svc_dirup - ?
  * ...

= Group ? / 2.8 =
  * [FileSystemPlan FAT-ng filesystem] - ?
  * svc_fread, svc_fwrite, svc_fappend, (svc_fopen) - ?
  * ...
  